"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cognitoRefreshToken = cognitoRefreshToken;
const client_cognito_identity_provider_1 = require("@aws-sdk/client-cognito-identity-provider");
async function cognitoRefreshToken(authData, config) {
    const cognito = new client_cognito_identity_provider_1.CognitoIdentityProviderClient({
        region: config.awsRegion,
    });
    const initAuthCommand = new client_cognito_identity_provider_1.InitiateAuthCommand({
        AuthFlow: client_cognito_identity_provider_1.AuthFlowType.REFRESH_TOKEN_AUTH,
        ClientId: config.userPoolClientId,
        AuthParameters: {
            USERNAME: authData.cognitoUser[config.cognitoUsernameField],
            REFRESH_TOKEN: authData.refreshToken,
        },
    });
    const response = await cognito.send(initAuthCommand);
    if (!response.AuthenticationResult?.IdToken ||
        !response.AuthenticationResult?.AccessToken) {
        throw new Error("No username found");
    }
    return {
        accessToken: response.AuthenticationResult?.AccessToken,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29nbml0by1yZWZyZXNoLXRva2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FjdGlvbnMvY29nbml0by1yZWZyZXNoLXRva2VuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBT0Esa0RBNkJDO0FBcENELGdHQUltRDtBQUc1QyxLQUFLLFVBQVUsbUJBQW1CLENBQ3ZDLFFBQWtCLEVBQ2xCLE1BQWM7SUFFZCxNQUFNLE9BQU8sR0FBRyxJQUFJLGdFQUE2QixDQUFDO1FBQ2hELE1BQU0sRUFBRSxNQUFNLENBQUMsU0FBUztLQUN6QixDQUFDLENBQUM7SUFFSCxNQUFNLGVBQWUsR0FBRyxJQUFJLHNEQUFtQixDQUFDO1FBQzlDLFFBQVEsRUFBRSwrQ0FBWSxDQUFDLGtCQUFrQjtRQUN6QyxRQUFRLEVBQUUsTUFBTSxDQUFDLGdCQUFnQjtRQUNqQyxjQUFjLEVBQUU7WUFDZCxRQUFRLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUM7WUFDM0QsYUFBYSxFQUFFLFFBQVEsQ0FBQyxZQUFZO1NBQ3JDO0tBQ0YsQ0FBQyxDQUFDO0lBRUgsTUFBTSxRQUFRLEdBQUcsTUFBTSxPQUFPLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBRXJELElBQ0UsQ0FBQyxRQUFRLENBQUMsb0JBQW9CLEVBQUUsT0FBTztRQUN2QyxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxXQUFXLEVBQzNDLENBQUM7UUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELE9BQU87UUFDTCxXQUFXLEVBQUUsUUFBUSxDQUFDLG9CQUFvQixFQUFFLFdBQVc7S0FDeEQsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb2duaXRvSWRlbnRpdHlQcm92aWRlckNsaWVudCxcbiAgSW5pdGlhdGVBdXRoQ29tbWFuZCxcbiAgQXV0aEZsb3dUeXBlLFxufSBmcm9tIFwiQGF3cy1zZGsvY2xpZW50LWNvZ25pdG8taWRlbnRpdHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IEF1dGhEYXRhLCBDb25maWcgfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvZ25pdG9SZWZyZXNoVG9rZW4oXG4gIGF1dGhEYXRhOiBBdXRoRGF0YSxcbiAgY29uZmlnOiBDb25maWcsXG4pOiBQcm9taXNlPFBpY2s8QXV0aERhdGEsIFwiYWNjZXNzVG9rZW5cIj4+IHtcbiAgY29uc3QgY29nbml0byA9IG5ldyBDb2duaXRvSWRlbnRpdHlQcm92aWRlckNsaWVudCh7XG4gICAgcmVnaW9uOiBjb25maWcuYXdzUmVnaW9uLFxuICB9KTtcblxuICBjb25zdCBpbml0QXV0aENvbW1hbmQgPSBuZXcgSW5pdGlhdGVBdXRoQ29tbWFuZCh7XG4gICAgQXV0aEZsb3c6IEF1dGhGbG93VHlwZS5SRUZSRVNIX1RPS0VOX0FVVEgsXG4gICAgQ2xpZW50SWQ6IGNvbmZpZy51c2VyUG9vbENsaWVudElkLFxuICAgIEF1dGhQYXJhbWV0ZXJzOiB7XG4gICAgICBVU0VSTkFNRTogYXV0aERhdGEuY29nbml0b1VzZXJbY29uZmlnLmNvZ25pdG9Vc2VybmFtZUZpZWxkXSxcbiAgICAgIFJFRlJFU0hfVE9LRU46IGF1dGhEYXRhLnJlZnJlc2hUb2tlbixcbiAgICB9LFxuICB9KTtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNvZ25pdG8uc2VuZChpbml0QXV0aENvbW1hbmQpO1xuXG4gIGlmIChcbiAgICAhcmVzcG9uc2UuQXV0aGVudGljYXRpb25SZXN1bHQ/LklkVG9rZW4gfHxcbiAgICAhcmVzcG9uc2UuQXV0aGVudGljYXRpb25SZXN1bHQ/LkFjY2Vzc1Rva2VuXG4gICkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHVzZXJuYW1lIGZvdW5kXCIpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBhY2Nlc3NUb2tlbjogcmVzcG9uc2UuQXV0aGVudGljYXRpb25SZXN1bHQ/LkFjY2Vzc1Rva2VuLFxuICB9O1xufVxuIl19