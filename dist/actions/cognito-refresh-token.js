"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cognitoRefreshToken = cognitoRefreshToken;
const client_cognito_identity_provider_1 = require("@aws-sdk/client-cognito-identity-provider");
async function cognitoRefreshToken(authData, config) {
    const cognito = new client_cognito_identity_provider_1.CognitoIdentityProviderClient({
        region: config.awsRegion,
    });
    const initAuthCommand = new client_cognito_identity_provider_1.InitiateAuthCommand({
        AuthFlow: client_cognito_identity_provider_1.AuthFlowType.REFRESH_TOKEN_AUTH,
        ClientId: config.userPoolClientId,
        AuthParameters: {
            REFRESH_TOKEN: authData.refreshToken,
        },
    });
    const response = await cognito.send(initAuthCommand);
    if (!response.AuthenticationResult?.IdToken ||
        !response.AuthenticationResult?.AccessToken) {
        throw new Error("No username found");
    }
    return {
        accessToken: response.AuthenticationResult?.AccessToken,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29nbml0by1yZWZyZXNoLXRva2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FjdGlvbnMvY29nbml0by1yZWZyZXNoLXRva2VuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBT0Esa0RBNEJDO0FBbkNELGdHQUltRDtBQUc1QyxLQUFLLFVBQVUsbUJBQW1CLENBQ3ZDLFFBQWtCLEVBQ2xCLE1BQWM7SUFFZCxNQUFNLE9BQU8sR0FBRyxJQUFJLGdFQUE2QixDQUFDO1FBQ2hELE1BQU0sRUFBRSxNQUFNLENBQUMsU0FBUztLQUN6QixDQUFDLENBQUM7SUFFSCxNQUFNLGVBQWUsR0FBRyxJQUFJLHNEQUFtQixDQUFDO1FBQzlDLFFBQVEsRUFBRSwrQ0FBWSxDQUFDLGtCQUFrQjtRQUN6QyxRQUFRLEVBQUUsTUFBTSxDQUFDLGdCQUFnQjtRQUNqQyxjQUFjLEVBQUU7WUFDZCxhQUFhLEVBQUUsUUFBUSxDQUFDLFlBQVk7U0FDckM7S0FDRixDQUFDLENBQUM7SUFFSCxNQUFNLFFBQVEsR0FBRyxNQUFNLE9BQU8sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFckQsSUFDRSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxPQUFPO1FBQ3ZDLENBQUMsUUFBUSxDQUFDLG9CQUFvQixFQUFFLFdBQVcsRUFDM0MsQ0FBQztRQUNELE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsT0FBTztRQUNMLFdBQVcsRUFBRSxRQUFRLENBQUMsb0JBQW9CLEVBQUUsV0FBVztLQUN4RCxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvZ25pdG9JZGVudGl0eVByb3ZpZGVyQ2xpZW50LFxuICBJbml0aWF0ZUF1dGhDb21tYW5kLFxuICBBdXRoRmxvd1R5cGUsXG59IGZyb20gXCJAYXdzLXNkay9jbGllbnQtY29nbml0by1pZGVudGl0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgQXV0aERhdGEsIENvbmZpZyB9IGZyb20gXCIuLi90eXBlc1wiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29nbml0b1JlZnJlc2hUb2tlbihcbiAgYXV0aERhdGE6IEF1dGhEYXRhLFxuICBjb25maWc6IENvbmZpZyxcbik6IFByb21pc2U8UGljazxBdXRoRGF0YSwgXCJhY2Nlc3NUb2tlblwiPj4ge1xuICBjb25zdCBjb2duaXRvID0gbmV3IENvZ25pdG9JZGVudGl0eVByb3ZpZGVyQ2xpZW50KHtcbiAgICByZWdpb246IGNvbmZpZy5hd3NSZWdpb24sXG4gIH0pO1xuXG4gIGNvbnN0IGluaXRBdXRoQ29tbWFuZCA9IG5ldyBJbml0aWF0ZUF1dGhDb21tYW5kKHtcbiAgICBBdXRoRmxvdzogQXV0aEZsb3dUeXBlLlJFRlJFU0hfVE9LRU5fQVVUSCxcbiAgICBDbGllbnRJZDogY29uZmlnLnVzZXJQb29sQ2xpZW50SWQsXG4gICAgQXV0aFBhcmFtZXRlcnM6IHtcbiAgICAgIFJFRlJFU0hfVE9LRU46IGF1dGhEYXRhLnJlZnJlc2hUb2tlbixcbiAgICB9LFxuICB9KTtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNvZ25pdG8uc2VuZChpbml0QXV0aENvbW1hbmQpO1xuXG4gIGlmIChcbiAgICAhcmVzcG9uc2UuQXV0aGVudGljYXRpb25SZXN1bHQ/LklkVG9rZW4gfHxcbiAgICAhcmVzcG9uc2UuQXV0aGVudGljYXRpb25SZXN1bHQ/LkFjY2Vzc1Rva2VuXG4gICkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHVzZXJuYW1lIGZvdW5kXCIpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBhY2Nlc3NUb2tlbjogcmVzcG9uc2UuQXV0aGVudGljYXRpb25SZXN1bHQ/LkFjY2Vzc1Rva2VuLFxuICB9O1xufVxuIl19